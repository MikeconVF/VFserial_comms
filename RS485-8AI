from pymodbus.client.sync import ModbusSerialClient
import time 

# Create a Modbus serial client
client = ModbusSerialClient(
    method='rtu',
    port='/dev/cu.usbserial-1420',  # Replace with your serial port
    baudrate=115200,  # Set the baud rate of your serial communication
    parity='N',  # Set the parity as required
    stopbits=1,  # Set the stop bits as required
    bytesize=8  # Set the data bits as required
)

# slow down script excution
time_n=0.5

# Open the Modbus serial connection
if client.connect():
    # Specify the Modbus slave address
    MOD_8AI = 2  # Replace with your Modbus device's slave address

    # Read holding register 40003S
    start_register = 52
    num_registers = 8

    def update_register_number(register_number):
        if register_number < num_registers:
            return register_number + 1
        elif register_number == num_registers:
            return 0

    while True:
        for register_number in range(num_registers):
            # Read the holding register
            response = client.read_input_registers(start_register + register_number, 1, unit=MOD_8AI)
            if response.isError():
                print("Modbus error:", response)
                break

            register_value = response.registers[0]

            #connect ECM meter to AO1
            if register_number == 0:
                #ECM meter data retrieved
                ECM_data = register_value
                print("Register value:", register_value, "Î¼A")
            
            #connect flow meter to AO2
            if register_number == 1:
                #Flow meter data retrieved
                FlowM_data = register_value
                print("Register value:", register_value, "ml/min")

            if register_number == 2:
                #Injector Pulse 1 data retrieved
                FlowM_data = register_value
                print("Register value:", register_value, "ml/min")

            register_number = update_register_number(register_number)

            time.sleep(time_n)

    client.close()
    print("Modbus serial connection closed.")
else:
    print("Unable to connect to the Modbus device")
